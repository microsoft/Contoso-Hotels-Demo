// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmartHotel.Registration.Data {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Registration", Namespace="http://schemas.datacontract.org/2004/07/SmartHotel.Registration.Wcf.Models")]
    [System.SerializableAttribute()]
    public partial class Registration : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreditCardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FloorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PassportField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoomNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreditCard {
            get {
                return this.CreditCardField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditCardField, value) != true)) {
                    this.CreditCardField = value;
                    this.RaisePropertyChanged("CreditCard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerIdField, value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Floor {
            get {
                return this.FloorField;
            }
            set {
                if ((this.FloorField.Equals(value) != true)) {
                    this.FloorField = value;
                    this.RaisePropertyChanged("Floor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Passport {
            get {
                return this.PassportField;
            }
            set {
                if ((object.ReferenceEquals(this.PassportField, value) != true)) {
                    this.PassportField = value;
                    this.RaisePropertyChanged("Passport");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoomNumber {
            get {
                return this.RoomNumberField;
            }
            set {
                if ((this.RoomNumberField.Equals(value) != true)) {
                    this.RoomNumberField = value;
                    this.RaisePropertyChanged("RoomNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RegistrationDaySummary", Namespace="http://schemas.datacontract.org/2004/07/SmartHotel.Registration.Wcf.Models")]
    [System.SerializableAttribute()]
    public partial class RegistrationDaySummary : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CheckInsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CheckOutsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CheckIns {
            get {
                return this.CheckInsField;
            }
            set {
                if ((this.CheckInsField.Equals(value) != true)) {
                    this.CheckInsField = value;
                    this.RaisePropertyChanged("CheckIns");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CheckOuts {
            get {
                return this.CheckOutsField;
            }
            set {
                if ((this.CheckOutsField.Equals(value) != true)) {
                    this.CheckOutsField = value;
                    this.RaisePropertyChanged("CheckOuts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Data.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTodayRegistrations", ReplyAction="http://tempuri.org/IService/GetTodayRegistrationsResponse")]
        SmartHotel.Registration.Data.Registration[] GetTodayRegistrations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTodayRegistrations", ReplyAction="http://tempuri.org/IService/GetTodayRegistrationsResponse")]
        System.Threading.Tasks.Task<SmartHotel.Registration.Data.Registration[]> GetTodayRegistrationsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTodayRegistrationSummary", ReplyAction="http://tempuri.org/IService/GetTodayRegistrationSummaryResponse")]
        SmartHotel.Registration.Data.RegistrationDaySummary GetTodayRegistrationSummary();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTodayRegistrationSummary", ReplyAction="http://tempuri.org/IService/GetTodayRegistrationSummaryResponse")]
        System.Threading.Tasks.Task<SmartHotel.Registration.Data.RegistrationDaySummary> GetTodayRegistrationSummaryAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCheckin", ReplyAction="http://tempuri.org/IService/GetCheckinResponse")]
        SmartHotel.Registration.Data.Registration GetCheckin(int registrationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCheckin", ReplyAction="http://tempuri.org/IService/GetCheckinResponse")]
        System.Threading.Tasks.Task<SmartHotel.Registration.Data.Registration> GetCheckinAsync(int registrationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCheckout", ReplyAction="http://tempuri.org/IService/GetCheckoutResponse")]
        SmartHotel.Registration.Data.Registration GetCheckout(int registrationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCheckout", ReplyAction="http://tempuri.org/IService/GetCheckoutResponse")]
        System.Threading.Tasks.Task<SmartHotel.Registration.Data.Registration> GetCheckoutAsync(int registrationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PostCheckin", ReplyAction="http://tempuri.org/IService/PostCheckinResponse")]
        void PostCheckin(int registrationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/PostCheckin", ReplyAction="http://tempuri.org/IService/PostCheckinResponse")]
        System.Threading.Tasks.Task PostCheckinAsync(int registrationId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : SmartHotel.Registration.Data.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<SmartHotel.Registration.Data.IService>, SmartHotel.Registration.Data.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SmartHotel.Registration.Data.Registration[] GetTodayRegistrations() {
            return base.Channel.GetTodayRegistrations();
        }
        
        public System.Threading.Tasks.Task<SmartHotel.Registration.Data.Registration[]> GetTodayRegistrationsAsync() {
            return base.Channel.GetTodayRegistrationsAsync();
        }
        
        public SmartHotel.Registration.Data.RegistrationDaySummary GetTodayRegistrationSummary() {
            return base.Channel.GetTodayRegistrationSummary();
        }
        
        public System.Threading.Tasks.Task<SmartHotel.Registration.Data.RegistrationDaySummary> GetTodayRegistrationSummaryAsync() {
            return base.Channel.GetTodayRegistrationSummaryAsync();
        }
        
        public SmartHotel.Registration.Data.Registration GetCheckin(int registrationId) {
            return base.Channel.GetCheckin(registrationId);
        }
        
        public System.Threading.Tasks.Task<SmartHotel.Registration.Data.Registration> GetCheckinAsync(int registrationId) {
            return base.Channel.GetCheckinAsync(registrationId);
        }
        
        public SmartHotel.Registration.Data.Registration GetCheckout(int registrationId) {
            return base.Channel.GetCheckout(registrationId);
        }
        
        public System.Threading.Tasks.Task<SmartHotel.Registration.Data.Registration> GetCheckoutAsync(int registrationId) {
            return base.Channel.GetCheckoutAsync(registrationId);
        }
        
        public void PostCheckin(int registrationId) {
            base.Channel.PostCheckin(registrationId);
        }
        
        public System.Threading.Tasks.Task PostCheckinAsync(int registrationId) {
            return base.Channel.PostCheckinAsync(registrationId);
        }
    }
}
